[{"D:\\projects\\react\\ecommerce\\ecommerce\\src\\index.js":"1","D:\\projects\\react\\ecommerce\\ecommerce\\src\\reportWebVitals.js":"2","D:\\projects\\react\\ecommerce\\ecommerce\\src\\App.js":"3","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\shop.js":"4","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\header\\header.js":"5","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\nav\\nav.js":"6","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\checkout\\login\\login.js":"7","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\cart\\cart.js":"8","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\item-viewer\\item-vieiwer.js":"9","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\checkout\\register\\register.js":"10","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\item\\item.js":"11","D:\\projects\\react\\ecommerce\\ecommerce\\src\\hooks\\http-hook.js":"12","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\cart\\cartItem\\cartItem.js":"13","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\size-button\\size-buttons.js":"14","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\utility\\modal\\modal.js":"15","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\utility\\custom-form\\custom-form.js":"16","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\utility\\animation-variants\\animation-variants.js":"17","D:\\projects\\react\\ecommerce\\ecommerce\\src\\store\\index.js":"18","D:\\projects\\react\\ecommerce\\ecommerce\\src\\store\\cart\\cart.js":"19","D:\\projects\\react\\ecommerce\\ecommerce\\src\\store\\user\\user.js":"20","D:\\projects\\react\\ecommerce\\ecommerce\\src\\store\\cart\\cartHttpActions.js":"21"},{"size":551,"mtime":1641285551400,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1635931086067,"results":"24","hashOfConfig":"23"},{"size":3722,"mtime":1642082427759,"results":"25","hashOfConfig":"23"},{"size":4653,"mtime":1640779105407,"results":"26","hashOfConfig":"23"},{"size":1030,"mtime":1636369761249,"results":"27","hashOfConfig":"23"},{"size":3281,"mtime":1641370820104,"results":"28","hashOfConfig":"23"},{"size":2378,"mtime":1641896930992,"results":"29","hashOfConfig":"23"},{"size":3179,"mtime":1641897263994,"results":"30","hashOfConfig":"23"},{"size":5136,"mtime":1641285263043,"results":"31","hashOfConfig":"23"},{"size":2258,"mtime":1641812031155,"results":"32","hashOfConfig":"23"},{"size":2307,"mtime":1641467410961,"results":"33","hashOfConfig":"23"},{"size":1183,"mtime":1641214805715,"results":"34","hashOfConfig":"23"},{"size":2382,"mtime":1637051866089,"results":"35","hashOfConfig":"23"},{"size":863,"mtime":1636017072656,"results":"36","hashOfConfig":"23"},{"size":1838,"mtime":1635931086008,"results":"37","hashOfConfig":"23"},{"size":995,"mtime":1635931086008,"results":"38","hashOfConfig":"23"},{"size":1119,"mtime":1636995827809,"results":"39","hashOfConfig":"23"},{"size":262,"mtime":1641285800677,"results":"40","hashOfConfig":"23"},{"size":4765,"mtime":1642012512293,"results":"41","hashOfConfig":"23"},{"size":530,"mtime":1641375189601,"results":"42","hashOfConfig":"23"},{"size":1827,"mtime":1642082470633,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1dxg2dk",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\react\\ecommerce\\ecommerce\\src\\index.js",[],["93","94"],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\reportWebVitals.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\App.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\shop.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\header\\header.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\nav\\nav.js",["95"],"import { useState } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./nav.scss\";\r\n\r\nconst Nav = (props) => {\r\n  const [showNav, setShowNav] = useState(false);\r\n  const itemsAmount = useSelector((state) => state.cart.itemsAmount);\r\n  const login = useSelector((state) => state.user.isLoggedIn);\r\n  const navOptions = [\r\n    {\r\n      title: \"shop\",\r\n      link: \"/\",\r\n    },\r\n    {\r\n      title: login ? \"log out\" : \"log in\",\r\n      link: login ? \"/checkout\" : \"/checkout/login\",\r\n    },\r\n    login && {\r\n      title: \"account\",\r\n      link: \"/account\",\r\n    },\r\n  ];\r\n  const toggleNavbar = () => {\r\n    const isNavShown = !showNav;\r\n\r\n    setShowNav(isNavShown);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"d-lg-flex navbar navbar-expand-lg navbar-light align-items-center justify-content-between py-1 mt-4\">\r\n      <button\r\n        className=\"navbar-toggler collapsed  shadow-none\"\r\n        onClick={toggleNavbar}\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <form className=\"form d-flex  ms-auto\">\r\n        <Link\r\n          to=\"/checkout/login\"\r\n          className=\" me-2 btn btn-primary px-2 d-flex align-items-center justify-content-center shadow-none\"\r\n          type=\"button\"\r\n        >\r\n          {\" \"}\r\n          Checkout\r\n        </Link>\r\n        <button\r\n          onClick={props.toggleCartHandler}\r\n          className=\"btn btn-outline-primary px-2 d-flex align-items-center  shadow-none \"\r\n          type=\"button\"\r\n        >\r\n          {\" \"}\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            className=\"mx-1\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5zM2 5h12v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5z\" />\r\n          </svg>{\" \"}\r\n          Bag <span className=\"px-1\">({itemsAmount})</span>\r\n        </button>\r\n      </form>\r\n      <div\r\n        className={\r\n          showNav\r\n            ? \"navbar-collapse d-flex flex-row flex-md-column justify-content-center align-items-center px-0 \"\r\n            : \"collapse navbar-collapse px-0\"\r\n        }\r\n      >\r\n        <ul className=\"navbar-nav  px-lg-4 d-flex  flex-lg-row flex-md-column align-items-center\">\r\n          {navOptions.map((option) => {\r\n            if (option) {\r\n              return (\r\n                <li key={option.title} className=\"nav-item px-1\">\r\n                  <NavLink\r\n                    to={option.link}\r\n                    className={(navData) =>\r\n                      navData.isActive ? \"nav-link active\" : \"nav-link\"\r\n                    }\r\n                    href={option.link}\r\n                    exact={true}\r\n                    onClick={() => {\r\n                      setShowNav(false);\r\n                    }}\r\n                  >\r\n                    {option.title.charAt(0).toUpperCase() +\r\n                      option.title.slice(1)}\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            }\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\checkout\\login\\login.js",["96","97","98","99","100"],"import React, { useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport CustomForm from \"../../utility/custom-form/custom-form\";\r\nimport * as Yup from \"yup\";\r\nimport useSendRequest from \"../../../hooks/http-hook\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userActions } from \"../../../store/user/user\";\r\n\r\nconst Checkout = (props) => {\r\n  const { sendRequest, items: userData, isLoading } = useSendRequest();\r\n  const isLoggedIn = useSelector((state) => state.user.isLoggedIn);\r\n  const usertoken = useSelector((state) => state.user.token);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    sendRequest({\r\n      url: \"http://localhost:8080/auth/login\",\r\n      method: \"POST\",\r\n      body: {\r\n        email: data.email.toLowerCase(),\r\n        password: data.password,\r\n      },\r\n      fn: (response) => {\r\n        dispatch(\r\n          userActions.login({\r\n            userId: response.userId,\r\n            token: response.token,\r\n            email: data.email,\r\n          })\r\n        );\r\n        navigate(\"/\");\r\n      },\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Must be a valid email\")\r\n      .max(255)\r\n      .required(\"Email is a required field\"),\r\n    password: Yup.string()\r\n      .min(8)\r\n      .max(255)\r\n      .required(\"Password is a required field\"),\r\n  });\r\n  return (\r\n    <motion.div>\r\n      <h1 className=\"my-4 pt-4\"> Log in </h1>\r\n\r\n      <CustomForm\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n        fields={[\r\n          {\r\n            id: \"email\",\r\n            name: \"email\",\r\n            placeholder: \"Email\",\r\n            type: \"email\",\r\n            label: \"Email\",\r\n          },\r\n          {\r\n            id: \"password\",\r\n            name: \"password\",\r\n            placeholder: \"Password\",\r\n            type: \"password\",\r\n            label: \"Password\",\r\n          },\r\n        ]}\r\n        btnText=\"Log in\"\r\n      >\r\n        <p>\r\n          Don't have an account? <Link to=\"/checkout/signUp\">Sign up</Link>\r\n        </p>\r\n      </CustomForm>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\cart\\cart.js",["101"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { cartActions } from \"../../store/cart/cart\";\r\nimport \"./cart.scss\";\r\nimport CartItem from \"./cartItem/cartItem\";\r\nconst Cart = (props) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const addMoreHandler = (id, size) => {\r\n    dispatch(\r\n      cartActions.addItem({\r\n        itemId: id,\r\n        DB: null,\r\n        chosenSize: size,\r\n      })\r\n    );\r\n  };\r\n  const removeItemsHandler = (id, amount = 1, size = null) => {\r\n    dispatch(\r\n      cartActions.removeItem({ itemId: id, qty: amount, chosenSize: size })\r\n    );\r\n  };\r\n\r\n  const cartItems = cart.items.map((item) => {\r\n    if (item.amountInCart === 0) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <CartItem\r\n        name={item.name}\r\n        price={item.price}\r\n        img={item.url}\r\n        amountInCart={item.amountInCart}\r\n        addMore={() => {\r\n          addMoreHandler(item._id, item.chosenSize);\r\n        }}\r\n        removeItems={() => {\r\n          removeItemsHandler(item._id, 1, item.chosenSize);\r\n        }}\r\n        removeAllItems={() => {\r\n          removeItemsHandler(item._id, item.amountInCart, item.chosenSize);\r\n        }}\r\n        id={item.id}\r\n        key={item.name + item.chosenSize}\r\n        size={item.chosenSize}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className={[\r\n          \"cart d-flex justify-content-center align-items-start\",\r\n          props.toggleCart,\r\n        ].join(\" \")}\r\n      >\r\n        <div className=\"container  my-3 mx-3 \">\r\n          <div className=\"d-flex justify-content-between mt-4 closeOptions align-items-center\">\r\n            {cart.items.length ? <h4>Items</h4> : <h4>No items</h4>}\r\n            <button className=\"close-btn\" onClick={props.toggleCartHandler}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"25\"\r\n                height=\"25\"\r\n                fill=\"currentColor\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <ul className=\"my-4\">{cartItems}</ul>\r\n          <div className=\"checkout my-2\">\r\n            <h5>Total Price</h5>\r\n            <p className=\"price\">$ {cart.totalPrice}</p>\r\n            <Link\r\n              to={\"/checkout/login\"}\r\n              className=\"btn btn-primary w-100 py-2\"\r\n              onClick={() => {\r\n                props.toggleCartHandler(\"hide\");\r\n              }}\r\n              disabled={!cart.items.length}\r\n            >\r\n              Checkout\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={[\"backdrop\", props.toggleCart].join(\" \")}\r\n        onClick={props.toggleCartHandler}\r\n      ></div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\item-viewer\\item-vieiwer.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\checkout\\register\\register.js",["102"],"import React from \"react\";\r\nimport CustomForm from \"../../utility/custom-form/custom-form\";\r\nimport * as Yup from \"yup\";\r\nimport useSendRequest from \"../../../hooks/http-hook\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nconst CheckoutRegister = (props) => {\r\n  const { sendRequest } = useSendRequest();\r\n  const navigate = useNavigate();\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n  };\r\n  const onSubmit = (data) => {\r\n    sendRequest({\r\n      url: \"http://localhost:8080/auth/signup\",\r\n      method: \"PUT\",\r\n      body: {\r\n        email: data.email,\r\n        password: data.password,\r\n      },\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Must be a valid email\")\r\n      .max(255)\r\n      .required(\"Email is a required field\"),\r\n    password: Yup.string()\r\n      .min(8)\r\n      .max(255)\r\n      .required(\"Password is a required field\"),\r\n    passwordConfirm: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords don't match!\")\r\n      .required(\"Please confirm your password\"),\r\n  });\r\n\r\n  return (\r\n    <motion.div>\r\n      <h1 className=\"my-4 pt-4\"> Sign up </h1>\r\n\r\n      <CustomForm\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n        fields={[\r\n          {\r\n            id: \"email\",\r\n            name: \"email\",\r\n            placeholder: \"Email\",\r\n            type: \"email\",\r\n            label: \"Email\",\r\n          },\r\n          {\r\n            id: \"password\",\r\n            name: \"password\",\r\n            placeholder: \"Password\",\r\n            type: \"password\",\r\n            label: \"Password\",\r\n          },\r\n          {\r\n            id: \"passwordConfirm\",\r\n            name: \"passwordConfirm\",\r\n            placeholder: \"Confirm Password\",\r\n            type: \"password\",\r\n            label: \"Confirm Password\",\r\n          },\r\n        ]}\r\n        btnText=\"Sign up\"\r\n      />\r\n      <p>\r\n        Already have an account? <Link to=\"/checkout/login\">Log in</Link>\r\n      </p>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default CheckoutRegister;\r\n","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\item\\item.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\hooks\\http-hook.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\cart\\cartItem\\cartItem.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\size-button\\size-buttons.js",["103"],"import \"./size-buttons.scss\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nconst SizeButtons = (props) => {\r\n  const sizesRef = useRef([]);\r\n  useEffect(() => {\r\n    sizesRef.current = sizesRef.current.slice(0, props.sizes.length);\r\n  }, [props.sizes]);\r\n  const btns = props.sizes.map((size, i) => {\r\n    if (size === null) {\r\n      return;\r\n    } else {\r\n      return (\r\n        <li key={size} id={size}>\r\n          <button\r\n            ref={(el) => (sizesRef.current[i] = el)}\r\n            className=\"size-btn me-2 my-1\"\r\n            onClick={(e) => {\r\n              props.choseSize(sizesRef.current[i].innerHTML);\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            {size}\r\n          </button>\r\n        </li>\r\n      );\r\n    }\r\n  });\r\n\r\n  return btns;\r\n};\r\n\r\nexport default SizeButtons;\r\n","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\utility\\modal\\modal.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\utility\\custom-form\\custom-form.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\utility\\animation-variants\\animation-variants.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\store\\index.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\store\\cart\\cart.js",["104"],"/* eslint-disable array-callback-return */\r\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n// import  {addToCart} from './cartHttpActions'\r\n\r\nconst initialCartState = {\r\n  items: [],\r\n  totalPrice: 0,\r\n  itemsAmount: 0,\r\n};\r\nconst findItem = (id, items, checkForDuplicate = false, size) => {\r\n  let existingCartItem;\r\n  if (checkForDuplicate) {\r\n    existingCartItem = items.findIndex((item) => {\r\n      if (item === null) return;\r\n      else return item._id.trim() === id.trim() && item.chosenSize === size;\r\n    });\r\n  } else {\r\n    existingCartItem = items.findIndex((item) => {\r\n      if (item === null) return;\r\n      else return item._id.trim() === id.trim();\r\n    });\r\n  }\r\n\r\n  const currItem = items[existingCartItem];\r\n  return currItem;\r\n};\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: initialCartState,\r\n  reducers: {\r\n    addItem(state, actions) {\r\n      console.log(\"reducer add item\");\r\n      let chosenItem = findItem(\r\n        actions.payload.itemId,\r\n        state.items,\r\n        true,\r\n        actions.payload.chosenSize\r\n      );\r\n\r\n      let updatedItem;\r\n      if (chosenItem === undefined) {\r\n        chosenItem = findItem(\r\n          actions.payload.itemId,\r\n          actions.payload.DB,\r\n          false,\r\n          actions.payload.chosenSize\r\n        );\r\n\r\n        updatedItem = {\r\n          ...chosenItem,\r\n          amountInCart: 1,\r\n          chosenSize: actions.payload.chosenSize,\r\n        };\r\n\r\n        state.items.push(updatedItem);\r\n        const updatedPrice = state.totalPrice + chosenItem.price * 1;\r\n        const newItemsAmount = (state.itemsAmount += 1);\r\n        state.itemsAmount = newItemsAmount;\r\n        state.totalPrice = updatedPrice;\r\n      } else {\r\n        const existingCartItem = state.items.findIndex(\r\n          (item) =>\r\n            item._id === actions.payload.itemId &&\r\n            item.chosenSize === actions.payload.chosenSize\r\n        );\r\n\r\n        const updatedPrice = state.totalPrice + chosenItem.price * 1;\r\n        const newItemsAmount = state.itemsAmount + 1;\r\n\r\n        updatedItem = {\r\n          ...chosenItem,\r\n          amountInCart: chosenItem.amountInCart + 1,\r\n          chosenSize: actions.payload.chosenSize,\r\n        };\r\n\r\n        state.items[existingCartItem] = updatedItem;\r\n\r\n        state.totalPrice = updatedPrice;\r\n        state.itemsAmount = newItemsAmount;\r\n      }\r\n    },\r\n    removeItem(state, actions) {\r\n      let existingCartItem;\r\n      if (actions.payload.chosenSize === null) {\r\n        existingCartItem = state.items.findIndex(\r\n          (item) => item._id === actions.payload.itemId\r\n        );\r\n      } else {\r\n        existingCartItem = state.items.findIndex(\r\n          (item) =>\r\n            item._id === actions.payload.itemId &&\r\n            actions.payload.chosenSize === item.chosenSize\r\n        );\r\n      }\r\n\r\n      let currItem = state.items[existingCartItem];\r\n      let updatedItem;\r\n      let updatedPrice =\r\n        state.totalPrice - currItem.price * actions.payload.qty;\r\n      let updatedItems;\r\n      let newItemsAmount;\r\n\r\n      if (currItem.amountInCart <= 1) {\r\n        updatedItems = [...state.items];\r\n        if (actions.payload.chosenSize === null) {\r\n          updatedItems = state.items.filter(\r\n            (item) => item._id !== actions.payload.itemId\r\n          );\r\n        } else {\r\n          updatedItems = state.items.filter(\r\n            (item) =>\r\n              item._id !== actions.payload.itemId ||\r\n              item.chosenSize !== actions.payload.chosenSize\r\n          );\r\n        }\r\n      } else {\r\n        updatedItem = {\r\n          ...currItem,\r\n          amountInCart: currItem.amountInCart - actions.payload.qty,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItem] = updatedItem;\r\n      }\r\n      newItemsAmount = state.itemsAmount - actions.payload.qty;\r\n      if (newItemsAmount <= 0) {\r\n        newItemsAmount = 0;\r\n      }\r\n      if (updatedPrice <= 0) {\r\n        updatedPrice = 0;\r\n      }\r\n      state.items = updatedItems;\r\n      state.totalPrice = updatedPrice;\r\n      state.itemsAmount = newItemsAmount;\r\n    },\r\n    setCart(state, actions) {\r\n      if (actions.payload.isLoggedIn === true) {\r\n        // reformat fetched items to match the state\r\n        state.items = actions.payload.items.map((item) => {\r\n          return {\r\n            ...item.itemId,\r\n            amountInCart: item.amountInCart,\r\n            chosenSize: item.chosenSize,\r\n          };\r\n        });\r\n      } else {\r\n        state.items = actions.payload.items;\r\n      }\r\n\r\n      state.totalPrice = actions.payload.totalPrice;\r\n      state.itemsAmount = actions.payload.itemsAmount;\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n","D:\\projects\\react\\ecommerce\\ecommerce\\src\\store\\user\\user.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\store\\cart\\cartHttpActions.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":74,"column":36,"nodeType":"111","messageId":"112","endLine":74,"endColumn":38},{"ruleId":"113","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"117","line":11,"column":31,"nodeType":"115","messageId":"116","endLine":11,"endColumn":39},{"ruleId":"113","severity":1,"message":"118","line":11,"column":41,"nodeType":"115","messageId":"116","endLine":11,"endColumn":50},{"ruleId":"113","severity":1,"message":"119","line":12,"column":9,"nodeType":"115","messageId":"116","endLine":12,"endColumn":19},{"ruleId":"113","severity":1,"message":"120","line":13,"column":9,"nodeType":"115","messageId":"116","endLine":13,"endColumn":18},{"ruleId":"109","severity":1,"message":"121","line":29,"column":7,"nodeType":"122","messageId":"123","endLine":29,"endColumn":14},{"ruleId":"113","severity":1,"message":"124","line":9,"column":9,"nodeType":"115","messageId":"116","endLine":9,"endColumn":17},{"ruleId":"109","severity":1,"message":"121","line":11,"column":7,"nodeType":"122","messageId":"123","endLine":11,"endColumn":14},{"ruleId":"113","severity":1,"message":"125","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":24},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'userData' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'usertoken' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'navigate' is assigned a value but never used.","'configureStore' is defined but never used.","no-global-assign","no-unsafe-negation"]