[{"D:\\projects\\react\\ecommerce\\ecommerce\\src\\index.js":"1","D:\\projects\\react\\ecommerce\\ecommerce\\src\\reportWebVitals.js":"2","D:\\projects\\react\\ecommerce\\ecommerce\\src\\App.js":"3","D:\\projects\\react\\ecommerce\\ecommerce\\src\\store\\index.js":"4","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\shop.js":"5","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\header\\header.js":"6","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\nav\\nav.js":"7","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\checkout\\login\\login.js":"8","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\cart\\cart.js":"9","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\item-viewer\\item-vieiwer.js":"10","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\checkout\\register\\register.js":"11","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\item\\item.js":"12","D:\\projects\\react\\ecommerce\\ecommerce\\src\\hooks\\http-hook.js":"13","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\cart\\cartItem\\cartItem.js":"14","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\size-button\\size-buttons.js":"15","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\utility\\modal\\modal.js":"16","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\utility\\custom-form\\custom-form.js":"17","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\utility\\animation-variants\\animation-variants.js":"18","D:\\projects\\react\\ecommerce\\ecommerce\\src\\store\\cartHttpActions.js":"19"},{"size":551,"mtime":1636016793656,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1635931086067,"results":"22","hashOfConfig":"21"},{"size":2810,"mtime":1641117234645,"results":"23","hashOfConfig":"21"},{"size":4451,"mtime":1640780543006,"results":"24","hashOfConfig":"21"},{"size":4653,"mtime":1640779105407,"results":"25","hashOfConfig":"21"},{"size":1030,"mtime":1636369761249,"results":"26","hashOfConfig":"21"},{"size":3002,"mtime":1641117877987,"results":"27","hashOfConfig":"21"},{"size":1790,"mtime":1636016939361,"results":"28","hashOfConfig":"21"},{"size":3169,"mtime":1640611632703,"results":"29","hashOfConfig":"21"},{"size":5100,"mtime":1640350043201,"results":"30","hashOfConfig":"21"},{"size":2204,"mtime":1636016979514,"results":"31","hashOfConfig":"21"},{"size":2055,"mtime":1640865078729,"results":"32","hashOfConfig":"21"},{"size":1156,"mtime":1640433370599,"results":"33","hashOfConfig":"21"},{"size":2382,"mtime":1637051866089,"results":"34","hashOfConfig":"21"},{"size":863,"mtime":1636017072656,"results":"35","hashOfConfig":"21"},{"size":1838,"mtime":1635931086008,"results":"36","hashOfConfig":"21"},{"size":995,"mtime":1635931086008,"results":"37","hashOfConfig":"21"},{"size":1119,"mtime":1636995827809,"results":"38","hashOfConfig":"21"},{"size":520,"mtime":1640857654264,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1dxg2dk",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\projects\\react\\ecommerce\\ecommerce\\src\\index.js",[],["83","84"],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\reportWebVitals.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\App.js",["85"],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\store\\index.js",["86"],"/* eslint-disable array-callback-return */\r\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\nimport { addToCart } from \"./cartHttpActions\";\r\n\r\nconst initialCartState = {\r\n  items: [],\r\n  totalPrice: 0,\r\n  itemsAmount: 0,\r\n};\r\nconst findItem = (id, items, checkForDuplicate = false, size) => {\r\n  let existingCartItem;\r\n  if (checkForDuplicate) {\r\n    existingCartItem = items.findIndex((item) => {\r\n      if (item === null) return;\r\n      else return item._id.trim() === id.trim() && item.chosenSize === size;\r\n    });\r\n  } else {\r\n    existingCartItem = items.findIndex((item) => {\r\n      if (item === null) return;\r\n      else return item._id.trim() === id.trim();\r\n    });\r\n  }\r\n\r\n  const currItem = items[existingCartItem];\r\n  return currItem;\r\n};\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: initialCartState,\r\n  reducers: {\r\n    addItem(state, actions) {\r\n      let chosenItem = findItem(\r\n        actions.payload.itemId,\r\n        state.items,\r\n        true,\r\n        actions.payload.chosenSize\r\n      );\r\n      let updatedItem;\r\n      if (chosenItem === undefined) {\r\n        chosenItem = findItem(\r\n          actions.payload.itemId,\r\n          actions.payload.DB,\r\n          false,\r\n          actions.payload.chosenSize\r\n        );\r\n\r\n        updatedItem = {\r\n          ...chosenItem,\r\n          amountInCart: 1,\r\n          chosenSize: actions.payload.chosenSize,\r\n        };\r\n\r\n        state.items.push(updatedItem);\r\n        const updatedPrice = state.totalPrice + chosenItem.price * 1;\r\n        const newItemsAmount = (state.itemsAmount += 1);\r\n        state.itemsAmount = newItemsAmount;\r\n        state.totalPrice = updatedPrice;\r\n      } else {\r\n        const existingCartItem = state.items.findIndex(\r\n          (item) =>\r\n            item._id === actions.payload.itemId &&\r\n            item.chosenSize === actions.payload.chosenSize\r\n        );\r\n\r\n        const updatedPrice = state.totalPrice + chosenItem.price * 1;\r\n        const newItemsAmount = state.itemsAmount + 1;\r\n\r\n        updatedItem = {\r\n          ...chosenItem,\r\n          amountInCart: chosenItem.amountInCart + 1,\r\n          chosenSize: actions.payload.chosenSize,\r\n        };\r\n\r\n        state.items[existingCartItem] = updatedItem;\r\n\r\n        state.totalPrice = updatedPrice;\r\n        state.itemsAmount = newItemsAmount;\r\n      }\r\n    },\r\n    removeItem(state, actions) {\r\n      let existingCartItem;\r\n      if (actions.payload.chosenSize === null) {\r\n        existingCartItem = state.items.findIndex(\r\n          (item) => item._id === actions.payload.itemId\r\n        );\r\n      } else {\r\n        existingCartItem = state.items.findIndex(\r\n          (item) =>\r\n            item._id === actions.payload.itemId &&\r\n            actions.payload.chosenSize === item.chosenSize\r\n        );\r\n      }\r\n\r\n      let currItem = state.items[existingCartItem];\r\n      let updatedItem;\r\n      let updatedPrice =\r\n        state.totalPrice - currItem.price * actions.payload.qty;\r\n      let updatedItems;\r\n      let newItemsAmount;\r\n\r\n      if (currItem.amountInCart <= 1) {\r\n        updatedItems = [...state.items];\r\n        if (actions.payload.chosenSize === null) {\r\n          updatedItems = state.items.filter(\r\n            (item) => item._id !== actions.payload.itemId\r\n          );\r\n        } else {\r\n          updatedItems = state.items.filter(\r\n            (item) =>\r\n              item._id !== actions.payload.itemId ||\r\n              item.chosenSize !== actions.payload.chosenSize\r\n          );\r\n        }\r\n      } else {\r\n        updatedItem = {\r\n          ...currItem,\r\n          amountInCart: currItem.amountInCart - actions.payload.qty,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItem] = updatedItem;\r\n      }\r\n      newItemsAmount = state.itemsAmount - actions.payload.qty;\r\n      if (newItemsAmount <= 0) {\r\n        newItemsAmount = 0;\r\n      }\r\n      if (updatedPrice <= 0) {\r\n        updatedPrice = 0;\r\n      }\r\n      state.items = updatedItems;\r\n      state.totalPrice = updatedPrice;\r\n      state.itemsAmount = newItemsAmount;\r\n    },\r\n    setCart(state, actions) {\r\n      state.items = actions.payload.items;\r\n      state.totalPrice = actions.payload.totalPrice;\r\n      state.itemsAmount = actions.payload.itemsAmount;\r\n    },\r\n  },\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    cart: cartSlice.reducer,\r\n  },\r\n});\r\nexport const cartActions = cartSlice.actions;\r\n","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\shop.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\header\\header.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\nav\\nav.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\checkout\\login\\login.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\cart\\cart.js",["87"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { cartActions } from \"../../store\";\r\nimport \"./cart.scss\";\r\nimport CartItem from \"./cartItem/cartItem\";\r\nconst Cart = (props) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const addMoreHandler = (id, size) => {\r\n    dispatch(\r\n      cartActions.addItem({\r\n        itemId: id,\r\n        DB: null,\r\n        chosenSize: size,\r\n      })\r\n    );\r\n  };\r\n  const removeItemsHandler = (id, amount = 1, size = null) => {\r\n    dispatch(\r\n      cartActions.removeItem({ itemId: id, qty: amount, chosenSize: size })\r\n    );\r\n  };\r\n\r\n  const cartItems = cart.items.map((item) => {\r\n    if (item.amountInCart === 0) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <CartItem\r\n        name={item.name}\r\n        price={item.price}\r\n        img={item.url}\r\n        amountInCart={item.amountInCart}\r\n        addMore={() => {\r\n          addMoreHandler(item._id, item.chosenSize);\r\n        }}\r\n        removeItems={() => {\r\n          removeItemsHandler(item._id, 1, item.chosenSize);\r\n        }}\r\n        removeAllItems={() => {\r\n          removeItemsHandler(item._id, item.amountInCart, item.chosenSize);\r\n        }}\r\n        id={item.id}\r\n        key={item.name + item.chosenSize}\r\n        size={item.chosenSize}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className={[\r\n          \"cart d-flex justify-content-center align-items-start\",\r\n          props.toggleCart,\r\n        ].join(\" \")}\r\n      >\r\n        <div className=\"container  my-3 mx-3 \">\r\n          <div className=\"d-flex justify-content-between mt-4 closeOptions align-items-center\">\r\n            {cart.items.length ? <h4>Items</h4> : <h4>No items</h4>}\r\n            <button className=\"close-btn\" onClick={props.toggleCartHandler}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"25\"\r\n                height=\"25\"\r\n                fill=\"currentColor\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <ul className=\"my-4\">{cartItems}</ul>\r\n          <div className=\"checkout my-2\">\r\n            <h5>Total Price</h5>\r\n            <p className=\"price\">$ {cart.totalPrice}</p>\r\n            <Link\r\n              to={\"/checkout/login\"}\r\n              className=\"btn btn-primary w-100 py-2\"\r\n              onClick={() => {\r\n                props.toggleCartHandler(\"hide\");\r\n              }}\r\n              disabled={!cart.items.length}\r\n            >\r\n              Checkout\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={[\"backdrop\", props.toggleCart].join(\" \")}\r\n        onClick={props.toggleCartHandler}\r\n      ></div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\item-viewer\\item-vieiwer.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\checkout\\register\\register.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\item\\item.js",["88"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SizeButtons from \"../size-button/size-buttons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { addToCart } from \"../../../store/cartHttpActions\";\r\nimport { cartActions } from \"../../../store\";\r\nconst Item = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [size, setSize] = useState(null);\r\n  const cart = useSelector((state) => state.cart);\r\n  return (\r\n    <React.Fragment>\r\n      <form className=\"card  border-0 shadow-sm me-2 \">\r\n        <div className=\"imgContainer\">\r\n          <Link to={[\"/shop/view\", props.id].join(\" \")}>\r\n            {\" \"}\r\n            <img\r\n              className=\"card-img-top\"\r\n              src={props.img}\r\n              alt={props.name}\r\n            />{\" \"}\r\n          </Link>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{props.name}</h5>\r\n          <p className=\"card-text price\">$ {props.price}</p>\r\n\r\n          <ul className=\"d-flex justify-content-start\">\r\n            <SizeButtons\r\n              sizes={props.sizes}\r\n              choseSize={(chosenSize) => {\r\n                setSize(chosenSize);\r\n              }}\r\n            />\r\n          </ul>\r\n\r\n          <button\r\n            className=\"btn btn-primary my-3\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              if (size === null) {\r\n                props.sizeError(true, props.id);\r\n              } else {\r\n                props.toggleCartHandler();\r\n                dispatch(\r\n                  cartActions.addItem({\r\n                    itemId: props.id,\r\n                    DB: props.DB,\r\n                    chosenSize: size,\r\n                    cart: cart,\r\n                  })\r\n                );\r\n\r\n                setSize(null);\r\n                props.sizeError(false);\r\n              }\r\n            }}\r\n          >\r\n            Add to Cart\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","D:\\projects\\react\\ecommerce\\ecommerce\\src\\hooks\\http-hook.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\cart\\cartItem\\cartItem.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\shop\\size-button\\size-buttons.js",["89"],"import \"./size-buttons.scss\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nconst SizeButtons = (props) => {\r\n  const sizesRef = useRef([]);\r\n  useEffect(() => {\r\n    sizesRef.current = sizesRef.current.slice(0, props.sizes.length);\r\n  }, [props.sizes]);\r\n  const btns = props.sizes.map((size, i) => {\r\n    if (size === null) {\r\n      return;\r\n    } else {\r\n      return (\r\n        <li key={size} id={size}>\r\n          <button\r\n            ref={(el) => (sizesRef.current[i] = el)}\r\n            className=\"size-btn me-2 my-1\"\r\n            onClick={(e) => {\r\n              props.choseSize(sizesRef.current[i].innerHTML);\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            {size}\r\n          </button>\r\n        </li>\r\n      );\r\n    }\r\n  });\r\n\r\n  return btns;\r\n};\r\n\r\nexport default SizeButtons;\r\n","D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\utility\\modal\\modal.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\utility\\custom-form\\custom-form.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\components\\utility\\animation-variants\\animation-variants.js",[],"D:\\projects\\react\\ecommerce\\ecommerce\\src\\store\\cartHttpActions.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":14,"column":10,"nodeType":"96","messageId":"97","endLine":14,"endColumn":18},{"ruleId":"94","severity":1,"message":"98","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":19},{"ruleId":"99","severity":1,"message":"100","line":29,"column":7,"nodeType":"101","messageId":"102","endLine":29,"endColumn":14},{"ruleId":"94","severity":1,"message":"98","line":6,"column":10,"nodeType":"96","messageId":"97","endLine":6,"endColumn":19},{"ruleId":"99","severity":1,"message":"100","line":11,"column":7,"nodeType":"101","messageId":"102","endLine":11,"endColumn":14},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'sendCart' is defined but never used.","Identifier","unusedVar","'addToCart' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation"]